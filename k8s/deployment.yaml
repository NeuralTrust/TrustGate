apiVersion: v1
kind: ConfigMap
metadata:
  name: ai-gateway-config
data:
  config.yaml: |
    server:
      admin_port: 8080
      proxy_port: 8081
      base_domain: example.com
    redis:
      host: redis
      port: 6379
      password: ""
      db: 0
    database:
      host: postgres
      port: 5432
      user: postgres
      password: postgres
      dbname: ai_gateway
      ssl_mode: disable

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-gateway-admin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ai-gateway-admin
  template:
    metadata:
      labels:
        app: ai-gateway-admin
    spec:
      containers:
      - name: admin
        image: ai-gateway-ce:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: SERVER_TYPE
          value: "admin"
        - name: GIN_MODE
          value: "release"
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: config
          mountPath: /app/config.yaml
          subPath: config.yaml
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
      volumes:
      - name: config
        configMap:
          name: ai-gateway-config

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-gateway-proxy
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ai-gateway-proxy
  template:
    metadata:
      labels:
        app: ai-gateway-proxy
    spec:
      containers:
      - name: proxy
        image: ai-gateway-ce:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: SERVER_TYPE
          value: "proxy"
        - name: GIN_MODE
          value: "release"
        ports:
        - containerPort: 8081
        volumeMounts:
        - name: config
          mountPath: /app/config.yaml
          subPath: config.yaml
        readinessProbe:
          httpGet:
            path: /health
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          requests:
            cpu: "200m"
            memory: "256Mi"
          limits:
            cpu: "1000m"
            memory: "1Gi"
      volumes:
      - name: config
        configMap:
          name: ai-gateway-config

---
apiVersion: v1
kind: Service
metadata:
  name: ai-gateway-admin
spec:
  selector:
    app: ai-gateway-admin
  ports:
  - port: 8080
    targetPort: 8080
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: ai-gateway-proxy
spec:
  selector:
    app: ai-gateway-proxy
  ports:
  - port: 8081
    targetPort: 8081
  type: LoadBalancer

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ai-gateway
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: admin.ai-gateway.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ai-gateway-admin
            port:
              number: 8080
  - host: proxy.ai-gateway.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ai-gateway-proxy
            port:
              number: 8081 