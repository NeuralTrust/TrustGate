// Code generated by mockery v2.53.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
)

// CircuitBreaker is an autogenerated mock type for the CircuitBreaker type
type CircuitBreaker struct {
	mock.Mock
}

type CircuitBreaker_Expecter struct {
	mock *mock.Mock
}

func (_m *CircuitBreaker) EXPECT() *CircuitBreaker_Expecter {
	return &CircuitBreaker_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: fn
func (_m *CircuitBreaker) Execute(fn func() error) error {
	ret := _m.Called(fn)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(func() error) error); ok {
		r0 = rf(fn)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewCircuitBreaker creates a new instance of CircuitBreaker. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCircuitBreaker(t interface {
	mock.TestingT
	Cleanup(func())
}) *CircuitBreaker {
	mock := &CircuitBreaker{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
