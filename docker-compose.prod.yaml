version: '3.8'

services:
  admin:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - SERVER_TYPE=admin
      - GIN_MODE=release
    ports:
      - "8080:8080"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - ai-gateway

  proxy:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - SERVER_TYPE=proxy
      - GIN_MODE=release
    ports:
      - "8081:8081"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - ai-gateway

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped
    networks:
      - ai-gateway

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ai_gateway
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped
    networks:
      - ai-gateway

volumes:
  redis_data:
  postgres_data:

networks:
  ai-gateway:
    driver: bridge 