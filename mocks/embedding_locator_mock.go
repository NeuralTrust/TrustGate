// Code generated by mockery v2.53.0. DO NOT EDIT.

package mocks

import (
	embedding "github.com/NeuralTrust/TrustGate/pkg/domain/embedding"

	mock "github.com/stretchr/testify/mock"
)

// EmbeddingServiceLocator is an autogenerated mock type for the EmbeddingServiceLocator type
type EmbeddingServiceLocator struct {
	mock.Mock
}

type EmbeddingServiceLocator_Expecter struct {
	mock *mock.Mock
}

func (_m *EmbeddingServiceLocator) EXPECT() *EmbeddingServiceLocator_Expecter {
	return &EmbeddingServiceLocator_Expecter{mock: &_m.Mock}
}

// GetService provides a mock function with given fields: provider
func (_m *EmbeddingServiceLocator) GetService(provider string) (embedding.Creator, error) {
	ret := _m.Called(provider)

	if len(ret) == 0 {
		panic("no return value specified for GetService")
	}

	var r0 embedding.Creator
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (embedding.Creator, error)); ok {
		return rf(provider)
	}
	if rf, ok := ret.Get(0).(func(string) embedding.Creator); ok {
		r0 = rf(provider)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(embedding.Creator)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(provider)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// EmbeddingServiceLocator_GetService_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetService'
type EmbeddingServiceLocator_GetService_Call struct {
	*mock.Call
}

// GetService is a helper method to define mock.On call
//   - provider string
func (_e *EmbeddingServiceLocator_Expecter) GetService(provider interface{}) *EmbeddingServiceLocator_GetService_Call {
	return &EmbeddingServiceLocator_GetService_Call{Call: _e.mock.On("GetService", provider)}
}

func (_c *EmbeddingServiceLocator_GetService_Call) Run(run func(provider string)) *EmbeddingServiceLocator_GetService_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *EmbeddingServiceLocator_GetService_Call) Return(_a0 embedding.Creator, _a1 error) *EmbeddingServiceLocator_GetService_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *EmbeddingServiceLocator_GetService_Call) RunAndReturn(run func(string) (embedding.Creator, error)) *EmbeddingServiceLocator_GetService_Call {
	_c.Call.Return(run)
	return _c
}

// NewEmbeddingServiceLocator creates a new instance of EmbeddingServiceLocator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewEmbeddingServiceLocator(t interface {
	mock.TestingT
	Cleanup(func())
}) *EmbeddingServiceLocator {
	mock := &EmbeddingServiceLocator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
