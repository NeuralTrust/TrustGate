// Code generated by mockery v2.53.0. DO NOT EDIT.

package mocks

import (
	context "context"

	embedding "github.com/NeuralTrust/TrustGate/pkg/domain/embedding"
	mock "github.com/stretchr/testify/mock"
)

// Creator is an autogenerated mock type for the Creator type
type Creator struct {
	mock.Mock
}

type Creator_Expecter struct {
	mock *mock.Mock
}

func (_m *Creator) EXPECT() *Creator_Expecter {
	return &Creator_Expecter{mock: &_m.Mock}
}

// Generate provides a mock function with given fields: ctx, text, model, credentials
func (_m *Creator) Generate(ctx context.Context, text string, model string, credentials *embedding.Config) (*embedding.Embedding, error) {
	ret := _m.Called(ctx, text, model, credentials)

	if len(ret) == 0 {
		panic("no return value specified for Generate")
	}

	var r0 *embedding.Embedding
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string, *embedding.Config) (*embedding.Embedding, error)); ok {
		return rf(ctx, text, model, credentials)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, string, *embedding.Config) *embedding.Embedding); ok {
		r0 = rf(ctx, text, model, credentials)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*embedding.Embedding)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, string, *embedding.Config) error); ok {
		r1 = rf(ctx, text, model, credentials)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Creator_Generate_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Generate'
type Creator_Generate_Call struct {
	*mock.Call
}

// Generate is a helper method to define mock.On call
//   - ctx context.Context
//   - text string
//   - model string
//   - credentials *embedding.Config
func (_e *Creator_Expecter) Generate(ctx interface{}, text interface{}, model interface{}, credentials interface{}) *Creator_Generate_Call {
	return &Creator_Generate_Call{Call: _e.mock.On("Generate", ctx, text, model, credentials)}
}

func (_c *Creator_Generate_Call) Run(run func(ctx context.Context, text string, model string, credentials *embedding.Config)) *Creator_Generate_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(*embedding.Config))
	})
	return _c
}

func (_c *Creator_Generate_Call) Return(_a0 *embedding.Embedding, _a1 error) *Creator_Generate_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *Creator_Generate_Call) RunAndReturn(run func(context.Context, string, string, *embedding.Config) (*embedding.Embedding, error)) *Creator_Generate_Call {
	_c.Call.Return(run)
	return _c
}

// NewCreator creates a new instance of Creator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCreator(t interface {
	mock.TestingT
	Cleanup(func())
}) *Creator {
	mock := &Creator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
