{
    "swagger": "2.0",
    "info": {
        "title": "TrustGate",
        "contact": {
            "name": "NeuralTrust",
            "url": "https://neuraltrust.ai/contact",
            "email": "support@neuraltrust.ai"
        },
        "version": "v1.6.10"
    },
    "paths": {
        "/api/v1/gateways": {
            "get": {
                "description": "Retrieves a list of all gateways in the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gateways"
                ],
                "responses": {
                    "200": {
                        "description": "List of gateways",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/gateway.Gateway"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new gateway in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gateways"
                ],
                "parameters": [
                    {
                        "description": "Gateway data",
                        "name": "gateway",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreateGatewayRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Gateway created successfully",
                        "schema": {
                            "$ref": "#/definitions/gateway.Gateway"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/gateways/{gateway_id}": {
            "get": {
                "description": "Returns details of a specific gateway",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gateways"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gateway",
                        "schema": {
                            "$ref": "#/definitions/gateway.Gateway"
                        }
                    },
                    "404": {
                        "description": "Gateway not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing gateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gateways"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated gateway data",
                        "name": "gateway",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UpdateGatewayRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Gateway updated successfully"
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Removes a gateway from the system",
                "tags": [
                    "Gateways"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Gateway not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/gateways/{gateway_id}/keys": {
            "get": {
                "description": "Returns a list of all API keys for a gateway",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API Keys"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of API Keys",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/apikey.APIKey"
                            }
                        }
                    },
                    "404": {
                        "description": "Gateway not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Generates a new API key for the specified gateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API Keys"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "API Key request body",
                        "name": "api_key",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreateAPIKeyRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "API Key created successfully",
                        "schema": {
                            "$ref": "#/definitions/apikey.APIKey"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/gateways/{gateway_id}/keys/{key_id}": {
            "get": {
                "description": "Returns details of a specific API key",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API Keys"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "API Key ID",
                        "name": "key_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "API Key details",
                        "schema": {
                            "$ref": "#/definitions/apikey.APIKey"
                        }
                    },
                    "404": {
                        "description": "API Key not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Removes an API key from a gateway",
                "tags": [
                    "API Keys"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "API Key ID",
                        "name": "key_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "API Key deleted successfully"
                    },
                    "404": {
                        "description": "API Key not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/gateways/{gateway_id}/rules": {
            "get": {
                "description": "Returns a list of all rules for a gateway",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rules"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of rules",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/forwarding_rule.ForwardingRule"
                            }
                        }
                    },
                    "404": {
                        "description": "Gateway not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Adds a new rule under a gateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rules"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Rule request body",
                        "name": "rule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreateRuleRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Rule created successfully",
                        "schema": {
                            "$ref": "#/definitions/forwarding_rule.ForwardingRule"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/gateways/{gateway_id}/rules/{rule_id}": {
            "put": {
                "description": "Updates an existing rule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rules"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Rule ID",
                        "name": "rule_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated rule data",
                        "name": "rule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UpdateRuleRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Rule updated successfully"
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Rule not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Removes a rule from a gateway",
                "tags": [
                    "Rules"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Rule ID",
                        "name": "rule_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Rule deleted successfully"
                    },
                    "404": {
                        "description": "Rule not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/gateways/{gateway_id}/services": {
            "get": {
                "description": "Returns a list of all services for a gateway",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of services",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.Service"
                            }
                        }
                    },
                    "404": {
                        "description": "Gateway not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Adds a new service under a gateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Service request body",
                        "name": "service",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ServiceRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Service created successfully",
                        "schema": {
                            "$ref": "#/definitions/service.Service"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/gateways/{gateway_id}/services/{service_id}": {
            "get": {
                "description": "Returns details of a specific service",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "service_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service details",
                        "schema": {
                            "$ref": "#/definitions/service.Service"
                        }
                    },
                    "404": {
                        "description": "Service not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "service_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated service data",
                        "name": "service",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ServiceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service updated successfully",
                        "schema": {
                            "$ref": "#/definitions/service.Service"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Service not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Removes a service from a gateway",
                "tags": [
                    "Services"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "service_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Service deleted successfully"
                    },
                    "404": {
                        "description": "Service not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/gateways/{gateway_id}/upstreams": {
            "get": {
                "description": "Returns a list of all upstreams for a gateway",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Upstreams"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of upstreams",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/upstream.Upstream"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Adds a new upstream under a gateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Upstreams"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Upstream data",
                        "name": "upstream",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UpstreamRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Upstream created successfully",
                        "schema": {
                            "$ref": "#/definitions/upstream.Upstream"
                        }
                    }
                }
            }
        },
        "/api/v1/gateways/{gateway_id}/upstreams/{upstream_id}": {
            "get": {
                "description": "Returns details of a specific upstream",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Upstreams"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Upstream ID",
                        "name": "upstream_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Upstream details",
                        "schema": {
                            "$ref": "#/definitions/upstream.Upstream"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing upstream",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Upstreams"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Upstream ID",
                        "name": "upstream_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated upstream data",
                        "name": "upstream",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UpstreamRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Upstream updated successfully",
                        "schema": {
                            "$ref": "#/definitions/upstream.Upstream"
                        }
                    }
                }
            },
            "delete": {
                "description": "Removes an upstream from a gateway",
                "tags": [
                    "Upstreams"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Upstream ID",
                        "name": "upstream_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Upstream deleted successfully"
                    }
                }
            }
        }
    },
    "definitions": {
        "apikey.APIKey": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "gateway_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "domain.CredentialsJSON": {
            "type": "object",
            "properties": {
                "allow_override": {
                    "description": "General settings",
                    "type": "boolean"
                },
                "aws_access_key_id": {
                    "description": "AWS auth",
                    "type": "string"
                },
                "aws_secret_access_key": {
                    "type": "string"
                },
                "azure_client_id": {
                    "type": "string"
                },
                "azure_client_secret": {
                    "type": "string"
                },
                "azure_tenant_id": {
                    "type": "string"
                },
                "azure_use_managed_identity": {
                    "description": "Azure auth",
                    "type": "boolean"
                },
                "gcp_service_account_json": {
                    "type": "string"
                },
                "gcp_use_service_account": {
                    "description": "GCP auth",
                    "type": "boolean"
                },
                "header_name": {
                    "description": "Header-based auth",
                    "type": "string"
                },
                "header_value": {
                    "type": "string"
                },
                "param_location": {
                    "description": "\"query\" or \"body\"",
                    "type": "string"
                },
                "param_name": {
                    "description": "Parameter-based auth",
                    "type": "string"
                },
                "param_value": {
                    "type": "string"
                }
            }
        },
        "domain.HeadersJSON": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "domain.SecurityConfigJSON": {
            "type": "object",
            "properties": {
                "allowed_hosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "allowed_hosts_are_regex": {
                    "type": "boolean"
                },
                "browser_xss_filter": {
                    "type": "boolean"
                },
                "content_security_policy": {
                    "type": "string"
                },
                "content_type_nosniff": {
                    "type": "boolean"
                },
                "custom_frame_options_value": {
                    "type": "string"
                },
                "frame_deny": {
                    "type": "boolean"
                },
                "is_development": {
                    "type": "boolean"
                },
                "referrer_policy": {
                    "type": "string"
                },
                "ssl_host": {
                    "type": "string"
                },
                "ssl_proxy_headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "ssl_redirect": {
                    "type": "boolean"
                },
                "sts_include_subdomains": {
                    "type": "boolean"
                },
                "sts_seconds": {
                    "type": "integer"
                }
            }
        },
        "forwarding_rule.ForwardingRule": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "createdAt": {
                    "type": "string"
                },
                "gatewayID": {
                    "type": "string"
                },
                "headers": {
                    "$ref": "#/definitions/domain.HeadersJSON"
                },
                "id": {
                    "type": "string"
                },
                "methods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "path": {
                    "type": "string"
                },
                "pluginChain": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.PluginConfig"
                    }
                },
                "preserveHost": {
                    "type": "boolean"
                },
                "public": {
                    "type": "boolean"
                },
                "retryAttempts": {
                    "type": "integer"
                },
                "serviceID": {
                    "type": "string"
                },
                "stripPath": {
                    "type": "boolean"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "gateway.Gateway": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "required_plugins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.PluginConfig"
                    }
                },
                "security_config": {
                    "$ref": "#/definitions/domain.SecurityConfigJSON"
                },
                "status": {
                    "type": "string"
                },
                "subdomain": {
                    "type": "string"
                },
                "telemetry": {
                    "$ref": "#/definitions/telemetry.Telemetry"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "service.Service": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "credentials": {
                    "$ref": "#/definitions/types.Credentials"
                },
                "description": {
                    "type": "string"
                },
                "gateway_id": {
                    "type": "string"
                },
                "headers": {
                    "$ref": "#/definitions/domain.HeadersJSON"
                },
                "host": {
                    "description": "Direct configuration (used when type is \"direct\")",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "retries": {
                    "description": "Common settings",
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "description": "\"upstream\" or \"endpoint\"",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "upstream": {
                    "$ref": "#/definitions/upstream.Upstream"
                },
                "upstream_id": {
                    "description": "Upstream configuration (used when type is \"upstream\")",
                    "type": "string"
                }
            }
        },
        "telemetry.ExporterConfig": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "settings": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "telemetry.Telemetry": {
            "type": "object",
            "properties": {
                "enable_plugin_traces": {
                    "type": "boolean"
                },
                "enable_request_traces": {
                    "type": "boolean"
                },
                "exporters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/telemetry.ExporterConfig"
                    }
                },
                "extra_params": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "types.CreateAPIKeyRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "expires_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "types.CreateGatewayRequest": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "name": {
                    "description": "@required",
                    "type": "string"
                },
                "required_plugins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.PluginConfig"
                    }
                },
                "security_config": {
                    "$ref": "#/definitions/types.SecurityConfigRequest"
                },
                "status": {
                    "type": "string"
                },
                "subdomain": {
                    "description": "@required",
                    "type": "string"
                },
                "telemetry": {
                    "$ref": "#/definitions/types.TelemetryRequest"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "types.CreateRuleRequest": {
            "type": "object",
            "required": [
                "path",
                "service_id"
            ],
            "properties": {
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "methods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "path": {
                    "type": "string"
                },
                "plugin_chain": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.PluginConfig"
                    }
                },
                "preserve_host": {
                    "type": "boolean"
                },
                "retry_attempts": {
                    "type": "integer"
                },
                "service_id": {
                    "type": "string"
                },
                "strip_path": {
                    "type": "boolean"
                }
            }
        },
        "types.Credentials": {
            "type": "object",
            "properties": {
                "allow_override": {
                    "description": "General settings",
                    "type": "boolean"
                },
                "aws_access_key_id": {
                    "description": "AWS auth",
                    "type": "string"
                },
                "aws_secret_access_key": {
                    "type": "string"
                },
                "azure_client_id": {
                    "type": "string"
                },
                "azure_client_secret": {
                    "type": "string"
                },
                "azure_tenant_id": {
                    "type": "string"
                },
                "azure_use_managed_identity": {
                    "description": "Azure auth",
                    "type": "boolean"
                },
                "gcp_service_account_json": {
                    "type": "string"
                },
                "gcp_use_service_account": {
                    "description": "GCP auth",
                    "type": "boolean"
                },
                "header_name": {
                    "description": "Header-based auth",
                    "type": "string"
                },
                "header_value": {
                    "type": "string"
                },
                "param_location": {
                    "description": "\"query\" or \"body\"",
                    "type": "string"
                },
                "param_name": {
                    "description": "Parameter-based auth",
                    "type": "string"
                },
                "param_value": {
                    "type": "string"
                }
            }
        },
        "types.ExporterRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "settings": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "types.HealthCheckRequest": {
            "type": "object",
            "properties": {
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "interval": {
                    "description": "Time in seconds before resetting failure count",
                    "type": "integer"
                },
                "passive": {
                    "type": "boolean"
                },
                "path": {
                    "type": "string"
                },
                "threshold": {
                    "description": "Number of failures before marking as unhealthy",
                    "type": "integer"
                }
            }
        },
        "types.Level": {
            "type": "string",
            "enum": [
                "gateway",
                "rule"
            ],
            "x-enum-varnames": [
                "GatewayLevel",
                "RuleLevel"
            ]
        },
        "types.PluginConfig": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "description": "ID of the gateway or rule this plugin belongs to",
                    "type": "string"
                },
                "level": {
                    "$ref": "#/definitions/types.Level"
                },
                "name": {
                    "type": "string"
                },
                "parallel": {
                    "description": "Whether this plugin can run in parallel",
                    "type": "boolean"
                },
                "priority": {
                    "type": "integer"
                },
                "settings": {
                    "type": "object",
                    "additionalProperties": true
                },
                "stage": {
                    "$ref": "#/definitions/types.Stage"
                }
            }
        },
        "types.SecurityConfigRequest": {
            "type": "object",
            "properties": {
                "allowed_hosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "allowed_hosts_are_regex": {
                    "type": "boolean"
                },
                "browser_xss_filter": {
                    "type": "boolean"
                },
                "content_security_policy": {
                    "type": "string"
                },
                "content_type_nosniff": {
                    "type": "boolean"
                },
                "custom_frame_options_value": {
                    "type": "string"
                },
                "frame_deny": {
                    "type": "boolean"
                },
                "is_development": {
                    "type": "boolean"
                },
                "referrer_policy": {
                    "type": "string"
                },
                "ssl_host": {
                    "type": "string"
                },
                "ssl_proxy_headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "ssl_redirect": {
                    "type": "boolean"
                },
                "sts_include_subdomains": {
                    "type": "boolean"
                },
                "sts_seconds": {
                    "type": "integer"
                }
            }
        },
        "types.ServiceRequest": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "credentials": {
                    "$ref": "#/definitions/types.Credentials"
                },
                "description": {
                    "type": "string"
                },
                "gateway_id": {
                    "type": "string"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "retries": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "upstream_id": {
                    "type": "string"
                }
            }
        },
        "types.Stage": {
            "type": "string",
            "enum": [
                "pre_request",
                "post_request",
                "pre_response",
                "post_response"
            ],
            "x-enum-varnames": [
                "PreRequest",
                "PostRequest",
                "PreResponse",
                "PostResponse"
            ]
        },
        "types.TargetRequest": {
            "type": "object",
            "properties": {
                "credentials": {
                    "$ref": "#/definitions/types.Credentials"
                },
                "default_model": {
                    "type": "string"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "models": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "types.TelemetryRequest": {
            "type": "object",
            "properties": {
                "enable_plugin_traces": {
                    "type": "boolean"
                },
                "enable_request_traces": {
                    "type": "boolean"
                },
                "exporters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ExporterRequest"
                    }
                },
                "extra_params": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "types.UpdateGatewayRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "required_plugins": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/types.PluginConfig"
                    }
                },
                "security_config": {
                    "$ref": "#/definitions/types.SecurityConfigRequest"
                },
                "status": {
                    "type": "string"
                },
                "telemetry": {
                    "$ref": "#/definitions/types.TelemetryRequest"
                }
            }
        },
        "types.UpdateRuleRequest": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "methods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "path": {
                    "type": "string"
                },
                "plugin_chain": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.PluginConfig"
                    }
                },
                "preserve_host": {
                    "type": "boolean"
                },
                "retry_attempts": {
                    "type": "integer"
                },
                "service_id": {
                    "type": "string"
                },
                "strip_path": {
                    "type": "boolean"
                }
            }
        },
        "types.UpstreamRequest": {
            "type": "object",
            "properties": {
                "algorithm": {
                    "type": "string"
                },
                "gateway_id": {
                    "type": "string"
                },
                "health_checks": {
                    "$ref": "#/definitions/types.HealthCheckRequest"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.TargetRequest"
                    }
                }
            }
        },
        "upstream.HealthCheck": {
            "type": "object",
            "properties": {
                "headers": {
                    "$ref": "#/definitions/domain.HeadersJSON"
                },
                "interval": {
                    "description": "Time in seconds before resetting failure count",
                    "type": "integer"
                },
                "passive": {
                    "type": "boolean"
                },
                "path": {
                    "type": "string"
                },
                "threshold": {
                    "description": "Number of failures before marking as unhealthy",
                    "type": "integer"
                }
            }
        },
        "upstream.Target": {
            "type": "object",
            "properties": {
                "credentials": {
                    "$ref": "#/definitions/domain.CredentialsJSON"
                },
                "default_model": {
                    "type": "string"
                },
                "headers": {
                    "$ref": "#/definitions/domain.HeadersJSON"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "models": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "upstream.Upstream": {
            "type": "object",
            "properties": {
                "algorithm": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "gateway_id": {
                    "type": "string"
                },
                "health_checks": {
                    "$ref": "#/definitions/upstream.HealthCheck"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/upstream.Target"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    }
}