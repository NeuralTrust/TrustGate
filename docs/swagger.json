{
    "swagger": "2.0",
    "info": {
        "title": "TrustGate",
        "contact": {
            "name": "NeuralTrust",
            "url": "https://neuraltrust.ai/contact",
            "email": "support@neuraltrust.ai"
        },
        "version": "v1.6.10"
    },
    "paths": {
        "/api/v1/gateways": {
            "get": {
                "description": "Retrieves a list of all gateways in the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gateways"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of gateways",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/gateway.Gateway"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new gateway in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gateways"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Gateway data",
                        "name": "gateway",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateGatewayRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Gateway created successfully",
                        "schema": {
                            "$ref": "#/definitions/gateway.Gateway"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/gateways/{gateway_id}": {
            "get": {
                "description": "Returns details of a specific gateway",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gateways"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gateway",
                        "schema": {
                            "$ref": "#/definitions/gateway.Gateway"
                        }
                    },
                    "404": {
                        "description": "Gateway not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing gateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gateways"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated gateway data",
                        "name": "gateway",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateGatewayRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Gateway updated successfully"
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Removes a gateway from the system",
                "tags": [
                    "Gateways"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Gateway not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/gateways/{gateway_id}/rules": {
            "get": {
                "description": "Returns a list of all rules for a gateway",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rules"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of rules",
                        "schema": {
                            "$ref": "#/definitions/response.ListRulesOutput"
                        }
                    },
                    "404": {
                        "description": "Gateway not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Adds a new rule under a gateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rules"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Rule request body",
                        "name": "rule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateRuleRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Rule created successfully",
                        "schema": {
                            "$ref": "#/definitions/forwarding_rule.ForwardingRule"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/gateways/{gateway_id}/rules/{rule_id}": {
            "put": {
                "description": "Updates an existing rule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rules"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Rule ID",
                        "name": "rule_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated rule data",
                        "name": "rule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateRuleRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Rule updated successfully"
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Rule not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Removes a rule from a gateway",
                "tags": [
                    "Rules"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Rule ID",
                        "name": "rule_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Rule deleted successfully"
                    },
                    "404": {
                        "description": "Rule not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/gateways/{gateway_id}/services": {
            "get": {
                "description": "Returns a list of all services for a gateway",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of services",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.Service"
                            }
                        }
                    },
                    "404": {
                        "description": "Gateway not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Adds a new service under a gateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Service request body",
                        "name": "service",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ServiceRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Service created successfully",
                        "schema": {
                            "$ref": "#/definitions/service.Service"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/gateways/{gateway_id}/services/{service_id}": {
            "get": {
                "description": "Returns details of a specific service",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "service_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service details",
                        "schema": {
                            "$ref": "#/definitions/service.Service"
                        }
                    },
                    "404": {
                        "description": "Service not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "service_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated service data",
                        "name": "service",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ServiceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service updated successfully",
                        "schema": {
                            "$ref": "#/definitions/service.Service"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Service not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Removes a service from a gateway",
                "tags": [
                    "Services"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "service_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Service deleted successfully"
                    },
                    "404": {
                        "description": "Service not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/gateways/{gateway_id}/upstreams": {
            "get": {
                "description": "Returns a list of all upstreams for a gateway",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Upstreams"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of upstreams",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/upstream.Upstream"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Adds a new upstream under a gateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Upstreams"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Upstream data",
                        "name": "upstream",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpstreamRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Upstream created successfully",
                        "schema": {
                            "$ref": "#/definitions/upstream.Upstream"
                        }
                    }
                }
            }
        },
        "/api/v1/gateways/{gateway_id}/upstreams/{upstream_id}": {
            "get": {
                "description": "Returns details of a specific upstream",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Upstreams"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Upstream ID",
                        "name": "upstream_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Upstream details",
                        "schema": {
                            "$ref": "#/definitions/upstream.Upstream"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing upstream",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Upstreams"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Upstream ID",
                        "name": "upstream_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated upstream data",
                        "name": "upstream",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpstreamRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Upstream updated successfully",
                        "schema": {
                            "$ref": "#/definitions/upstream.Upstream"
                        }
                    }
                }
            },
            "delete": {
                "description": "Removes an upstream from a gateway",
                "tags": [
                    "Upstreams"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Upstream ID",
                        "name": "upstream_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Upstream deleted successfully"
                    }
                }
            }
        },
        "/api/v1/iam/api-key": {
            "post": {
                "description": "Generates a new API key for the specified gateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API Keys"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "API Key request body",
                        "name": "api_key",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateAPIKeyRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "API Key created successfully",
                        "schema": {
                            "$ref": "#/definitions/apikey.APIKey"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/iam/api-key/public": {
            "get": {
                "description": "Returns a list of all API keys for a gateway with obfuscated key values",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API Keys"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of API Keys with obfuscated keys",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/apikey.APIKey"
                            }
                        }
                    },
                    "404": {
                        "description": "Gateway not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/iam/api-key/{key_id}": {
            "delete": {
                "description": "Removes an API key. If the key is scoped to a gateway (GatewayType), provide ?subject_id=\u003cgateway_uuid\u003e.",
                "tags": [
                    "API Keys"
                ],
                "summary": "Delete an API Key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "API Key ID",
                        "name": "key_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/iam/api-key/{key_id}/policies": {
            "put": {
                "description": "Updates the set of allowed rule IDs (policies) for an API key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API Keys"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gateway_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "API Key ID",
                        "name": "key_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Policies update payload",
                        "name": "update",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.updateAPIKeyPoliciesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "API Key updated successfully",
                        "schema": {
                            "$ref": "#/definitions/apikey.APIKey"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "API key not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/plugins": {
            "put": {
                "description": "Replaces plugins matched by ID within the chain, preserving the original id and name.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Plugins"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Update plugins payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdatePluginsRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Plugins updated successfully"
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Entity or plugin not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Adds plugins to a gateway's required plugins or a rule's plugin chain.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Plugins"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Add plugins payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddPluginsRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Plugins added successfully"
                    },
                    "400": {
                        "description": "Invalid request data or duplicate plugin for stage",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Entity not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the specified plugins from a gateway's required plugins or a rule's plugin chain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Plugins"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Delete plugins payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DeletePluginsRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Plugins deleted successfully"
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Entity not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/version": {
            "get": {
                "description": "Returns the current version of the AI-Gateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Version"
                ],
                "responses": {
                    "200": {
                        "description": "Version information",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apikey.APIKey": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subject": {
                    "type": "string"
                },
                "subject_type": {
                    "$ref": "#/definitions/apikey.SubjectType"
                }
            }
        },
        "apikey.SubjectType": {
            "type": "string",
            "enum": [
                "engine",
                "gateway"
            ],
            "x-enum-varnames": [
                "EngineType",
                "GatewayType"
            ]
        },
        "domain.ClientTLSConfig": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/types.ClientTLSConfig"
            }
        },
        "domain.CredentialsJSON": {
            "type": "object",
            "properties": {
                "api_key": {
                    "description": "Api Key",
                    "type": "string"
                },
                "aws_access_key_id": {
                    "description": "AWS auth",
                    "type": "string"
                },
                "aws_region": {
                    "type": "string"
                },
                "aws_role": {
                    "type": "string"
                },
                "aws_secret_access_key": {
                    "type": "string"
                },
                "aws_session_token": {
                    "type": "string"
                },
                "aws_use_role": {
                    "type": "boolean"
                },
                "azure_client_id": {
                    "type": "string"
                },
                "azure_client_secret": {
                    "type": "string"
                },
                "azure_endpoint": {
                    "type": "string"
                },
                "azure_eversion": {
                    "type": "string"
                },
                "azure_tenant_id": {
                    "type": "string"
                },
                "azure_use_managed_identity": {
                    "description": "Azure auth",
                    "type": "boolean"
                },
                "gcp_service_account_json": {
                    "type": "string"
                },
                "gcp_use_service_account": {
                    "description": "GCP auth",
                    "type": "boolean"
                },
                "header_name": {
                    "description": "Header-based auth",
                    "type": "string"
                },
                "header_value": {
                    "type": "string"
                },
                "param_location": {
                    "description": "\"query\" or \"body\"",
                    "type": "string"
                },
                "param_name": {
                    "description": "Parameter-based auth",
                    "type": "string"
                },
                "param_value": {
                    "type": "string"
                }
            }
        },
        "domain.HeadersJSON": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "domain.SecurityConfigJSON": {
            "type": "object",
            "properties": {
                "allowed_hosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "allowed_hosts_are_regex": {
                    "type": "boolean"
                },
                "browser_xss_filter": {
                    "type": "boolean"
                },
                "content_security_policy": {
                    "type": "string"
                },
                "content_type_nosniff": {
                    "type": "boolean"
                },
                "custom_frame_options_value": {
                    "type": "string"
                },
                "frame_deny": {
                    "type": "boolean"
                },
                "is_development": {
                    "type": "boolean"
                },
                "referrer_policy": {
                    "type": "string"
                },
                "ssl_host": {
                    "type": "string"
                },
                "ssl_proxy_headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "ssl_redirect": {
                    "type": "boolean"
                },
                "sts_include_subdomains": {
                    "type": "boolean"
                },
                "sts_seconds": {
                    "type": "integer"
                }
            }
        },
        "domain.TrustLensJSON": {
            "type": "object",
            "properties": {
                "app_id": {
                    "type": "string"
                },
                "mapping": {
                    "$ref": "#/definitions/types.TrustLensMapping"
                },
                "team_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "forwarding_rule.ForwardingRule": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "createdAt": {
                    "type": "string"
                },
                "gatewayID": {
                    "type": "string"
                },
                "headers": {
                    "$ref": "#/definitions/domain.HeadersJSON"
                },
                "id": {
                    "type": "string"
                },
                "methods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "pluginChain": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.PluginConfig"
                    }
                },
                "preserveHost": {
                    "type": "boolean"
                },
                "public": {
                    "type": "boolean"
                },
                "retryAttempts": {
                    "type": "integer"
                },
                "serviceID": {
                    "type": "string"
                },
                "stripPath": {
                    "type": "boolean"
                },
                "trustLens": {
                    "$ref": "#/definitions/domain.TrustLensJSON"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "gateway.Gateway": {
            "type": "object",
            "properties": {
                "client_tls": {
                    "$ref": "#/definitions/domain.ClientTLSConfig"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "required_plugins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.PluginConfig"
                    }
                },
                "security_config": {
                    "$ref": "#/definitions/domain.SecurityConfigJSON"
                },
                "session_config": {
                    "$ref": "#/definitions/gateway.SessionConfig"
                },
                "status": {
                    "type": "string"
                },
                "telemetry": {
                    "$ref": "#/definitions/telemetry.Telemetry"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "gateway.SessionConfig": {
            "type": "object",
            "properties": {
                "body_param_name": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "header_name": {
                    "type": "string"
                },
                "mapping_field": {
                    "type": "string"
                },
                "ttl": {
                    "type": "integer"
                }
            }
        },
        "http.updateAPIKeyPoliciesRequest": {
            "type": "object",
            "properties": {
                "policies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "request.AddPluginsRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "plugins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.PluginConfig"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.AuthType": {
            "type": "string",
            "enum": [
                "oauth2"
            ],
            "x-enum-varnames": [
                "AuthTypeOAuth2"
            ]
        },
        "request.ClientTLSCertRequest": {
            "type": "object",
            "properties": {
                "certificate": {
                    "type": "string"
                },
                "private_key": {
                    "type": "string"
                }
            }
        },
        "request.ClientTLSConfigRequest": {
            "type": "object",
            "properties": {
                "allow_insecure_connections": {
                    "type": "boolean"
                },
                "ca_cert": {
                    "type": "string"
                },
                "cipher_suites": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "client_certs": {
                    "$ref": "#/definitions/request.ClientTLSCertRequest"
                },
                "curve_preferences": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "disable_system_ca_pool": {
                    "type": "boolean"
                },
                "max_version": {
                    "type": "string"
                },
                "min_version": {
                    "type": "string"
                }
            }
        },
        "request.CreateAPIKeyRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "expires_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subject": {
                    "type": "string"
                },
                "subject_type": {
                    "type": "string"
                }
            }
        },
        "request.CreateGatewayRequest": {
            "type": "object",
            "properties": {
                "client_tls": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/request.ClientTLSConfigRequest"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "name": {
                    "description": "@required",
                    "type": "string"
                },
                "required_plugins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.PluginConfig"
                    }
                },
                "security_config": {
                    "$ref": "#/definitions/request.SecurityConfigRequest"
                },
                "session_config": {
                    "$ref": "#/definitions/request.SessionConfigRequest"
                },
                "status": {
                    "type": "string"
                },
                "telemetry": {
                    "$ref": "#/definitions/request.TelemetryRequest"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "request.CreateRuleRequest": {
            "type": "object",
            "required": [
                "name",
                "path",
                "service_id"
            ],
            "properties": {
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "methods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "plugin_chain": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.PluginConfig"
                    }
                },
                "preserve_host": {
                    "type": "boolean"
                },
                "retry_attempts": {
                    "type": "integer"
                },
                "service_id": {
                    "type": "string"
                },
                "strip_path": {
                    "type": "boolean"
                },
                "trustlens": {
                    "$ref": "#/definitions/types.TrustLensConfig"
                }
            }
        },
        "request.DeletePluginsRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "plugins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.EmbeddingRequest": {
            "type": "object",
            "properties": {
                "credentials": {
                    "$ref": "#/definitions/types.Credentials"
                },
                "model": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                }
            }
        },
        "request.ExporterRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "settings": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "request.HealthCheckRequest": {
            "type": "object",
            "properties": {
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "interval": {
                    "description": "Time in seconds before resetting failure count",
                    "type": "integer"
                },
                "passive": {
                    "type": "boolean"
                },
                "path": {
                    "type": "string"
                },
                "threshold": {
                    "description": "Number of failures before marking as unhealthy",
                    "type": "integer"
                }
            }
        },
        "request.ProxyConfigRequest": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                }
            }
        },
        "request.SecurityConfigRequest": {
            "type": "object",
            "properties": {
                "allowed_hosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "allowed_hosts_are_regex": {
                    "type": "boolean"
                },
                "browser_xss_filter": {
                    "type": "boolean"
                },
                "content_security_policy": {
                    "type": "string"
                },
                "content_type_nosniff": {
                    "type": "boolean"
                },
                "custom_frame_options_value": {
                    "type": "string"
                },
                "frame_deny": {
                    "type": "boolean"
                },
                "is_development": {
                    "type": "boolean"
                },
                "referrer_policy": {
                    "type": "string"
                },
                "ssl_host": {
                    "type": "string"
                },
                "ssl_proxy_headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "ssl_redirect": {
                    "type": "boolean"
                },
                "sts_include_subdomains": {
                    "type": "boolean"
                },
                "sts_seconds": {
                    "type": "integer"
                }
            }
        },
        "request.ServiceRequest": {
            "type": "object",
            "properties": {
                "CreatedAt": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "type": "string"
                },
                "credentials": {
                    "$ref": "#/definitions/types.Credentials"
                },
                "description": {
                    "type": "string"
                },
                "gateway_id": {
                    "type": "string"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "retries": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "upstream_id": {
                    "type": "string"
                }
            }
        },
        "request.SessionConfigRequest": {
            "type": "object",
            "properties": {
                "body_param_name": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "header_name": {
                    "type": "string"
                },
                "mapping_field": {
                    "type": "string"
                },
                "ttl": {
                    "type": "integer"
                }
            }
        },
        "request.TargetAuthRequest": {
            "type": "object",
            "properties": {
                "oauth": {
                    "$ref": "#/definitions/request.UpstreamOAuthRequest"
                },
                "type": {
                    "$ref": "#/definitions/request.AuthType"
                }
            }
        },
        "request.TargetRequest": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/request.TargetAuthRequest"
                },
                "credentials": {
                    "$ref": "#/definitions/types.Credentials"
                },
                "default_model": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "insecure_ssl": {
                    "type": "boolean"
                },
                "models": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "provider_options": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "stream": {
                    "type": "boolean"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "request.TelemetryRequest": {
            "type": "object",
            "properties": {
                "enable_plugin_traces": {
                    "type": "boolean"
                },
                "enable_request_traces": {
                    "type": "boolean"
                },
                "exporters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.ExporterRequest"
                    }
                },
                "extra_params": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "header_mapping": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "request.UpdateGatewayRequest": {
            "type": "object",
            "properties": {
                "client_tls": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/request.ClientTLSConfigRequest"
                    }
                },
                "name": {
                    "type": "string"
                },
                "required_plugins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.PluginConfig"
                    }
                },
                "security_config": {
                    "$ref": "#/definitions/request.SecurityConfigRequest"
                },
                "session_config": {
                    "$ref": "#/definitions/request.SessionConfigRequest"
                },
                "status": {
                    "type": "string"
                },
                "telemetry": {
                    "$ref": "#/definitions/request.TelemetryRequest"
                }
            }
        },
        "request.UpdatePluginsRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "plugins": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {}
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.UpdateRuleRequest": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "methods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "plugin_chain": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.PluginConfig"
                    }
                },
                "preserve_host": {
                    "type": "boolean"
                },
                "retry_attempts": {
                    "type": "integer"
                },
                "service_id": {
                    "type": "string"
                },
                "strip_path": {
                    "type": "boolean"
                },
                "trustlens": {
                    "$ref": "#/definitions/types.TrustLensConfig"
                }
            }
        },
        "request.UpstreamAuthRequest": {
            "type": "object",
            "properties": {
                "oauth": {
                    "$ref": "#/definitions/request.UpstreamOAuthRequest"
                },
                "type": {
                    "$ref": "#/definitions/request.AuthType"
                }
            }
        },
        "request.UpstreamOAuthRequest": {
            "type": "object",
            "properties": {
                "audience": {
                    "type": "string"
                },
                "client_id": {
                    "type": "string"
                },
                "client_secret": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "code_verifier": {
                    "type": "string"
                },
                "extra": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "grant_type": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "redirect_uri": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "token_url": {
                    "type": "string"
                },
                "use_basic_auth": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "request.UpstreamRequest": {
            "type": "object",
            "properties": {
                "algorithm": {
                    "type": "string"
                },
                "auth": {
                    "$ref": "#/definitions/request.UpstreamAuthRequest"
                },
                "embedding": {
                    "$ref": "#/definitions/request.EmbeddingRequest"
                },
                "gateway_id": {
                    "type": "string"
                },
                "health_checks": {
                    "$ref": "#/definitions/request.HealthCheckRequest"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "proxy_config": {
                    "$ref": "#/definitions/request.ProxyConfigRequest"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.TargetRequest"
                    }
                },
                "websocket_config": {
                    "$ref": "#/definitions/request.WebhookConfigRequest"
                }
            }
        },
        "request.WebhookConfigRequest": {
            "type": "object",
            "properties": {
                "enable_direct_communication": {
                    "type": "boolean"
                },
                "handshake_timeout": {
                    "type": "string"
                },
                "ping_period": {
                    "type": "string"
                },
                "pong_wait": {
                    "type": "string"
                },
                "read_buffer_size": {
                    "type": "integer"
                },
                "return_error_details": {
                    "type": "boolean"
                },
                "write_buffer_size": {
                    "type": "integer"
                }
            }
        },
        "response.ForwardingRuleOutput": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string"
                },
                "headers": {
                    "$ref": "#/definitions/domain.HeadersJSON"
                },
                "id": {
                    "type": "string"
                },
                "methods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "plugin_chain": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.PluginConfig"
                    }
                },
                "preserve_host": {
                    "type": "boolean"
                },
                "retry_attempts": {
                    "type": "integer"
                },
                "service_id": {
                    "type": "string"
                },
                "strip_path": {
                    "type": "boolean"
                },
                "trustlens": {
                    "$ref": "#/definitions/domain.TrustLensJSON"
                },
                "updated_at": {
                    "type": "string"
                },
                "upstream": {
                    "$ref": "#/definitions/response.UpstreamOutput"
                }
            }
        },
        "response.GatewayOutput": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "plugin_chain": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.PluginConfig"
                    }
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.ListRulesOutput": {
            "type": "object",
            "properties": {
                "gateway": {
                    "$ref": "#/definitions/response.GatewayOutput"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.ForwardingRuleOutput"
                    }
                }
            }
        },
        "response.UpstreamOutput": {
            "type": "object",
            "properties": {
                "algorithm": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/upstream.Target"
                    }
                }
            }
        },
        "service.Service": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "credentials": {
                    "$ref": "#/definitions/types.Credentials"
                },
                "description": {
                    "type": "string"
                },
                "gateway_id": {
                    "type": "string"
                },
                "headers": {
                    "$ref": "#/definitions/domain.HeadersJSON"
                },
                "host": {
                    "description": "Direct configuration (used when type is \"direct\")",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "stream": {
                    "description": "Common settings",
                    "type": "boolean"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "description": "\"upstream\" or \"endpoint\"",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "upstream": {
                    "$ref": "#/definitions/upstream.Upstream"
                },
                "upstream_id": {
                    "description": "Upstream configuration (used when type is \"upstream\")",
                    "type": "string"
                }
            }
        },
        "telemetry.ExporterConfig": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "settings": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "telemetry.Telemetry": {
            "type": "object",
            "properties": {
                "enable_plugin_traces": {
                    "type": "boolean"
                },
                "enable_request_traces": {
                    "type": "boolean"
                },
                "exporters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/telemetry.ExporterConfig"
                    }
                },
                "extra_params": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "header_mapping": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "types.ClientTLSCert": {
            "type": "object",
            "properties": {
                "certificate": {
                    "type": "string"
                },
                "private_key": {
                    "type": "string"
                }
            }
        },
        "types.ClientTLSConfig": {
            "type": "object",
            "properties": {
                "allow_insecure_connections": {
                    "type": "boolean"
                },
                "ca_certs": {
                    "type": "string"
                },
                "cipher_suites": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "client_certs": {
                    "$ref": "#/definitions/types.ClientTLSCert"
                },
                "curve_preferences": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "disable_system_ca_pool": {
                    "type": "boolean"
                },
                "max_version": {
                    "type": "string"
                },
                "min_version": {
                    "type": "string"
                }
            }
        },
        "types.Credentials": {
            "type": "object",
            "properties": {
                "api_key": {
                    "description": "Api Key",
                    "type": "string"
                },
                "aws_access_key_id": {
                    "description": "AWS auth",
                    "type": "string"
                },
                "aws_region": {
                    "type": "string"
                },
                "aws_role": {
                    "type": "string"
                },
                "aws_secret_access_key": {
                    "type": "string"
                },
                "aws_session_token": {
                    "type": "string"
                },
                "aws_use_role": {
                    "type": "boolean"
                },
                "azure_client_id": {
                    "type": "string"
                },
                "azure_client_secret": {
                    "type": "string"
                },
                "azure_endpoint": {
                    "type": "string"
                },
                "azure_eversion": {
                    "type": "string"
                },
                "azure_tenant_id": {
                    "type": "string"
                },
                "azure_use_managed_identity": {
                    "description": "Azure auth",
                    "type": "boolean"
                },
                "gcp_service_account_json": {
                    "type": "string"
                },
                "gcp_use_service_account": {
                    "description": "GCP auth",
                    "type": "boolean"
                },
                "header_name": {
                    "description": "Header-based auth",
                    "type": "string"
                },
                "header_value": {
                    "type": "string"
                },
                "param_location": {
                    "description": "\"query\" or \"body\"",
                    "type": "string"
                },
                "param_name": {
                    "description": "Parameter-based auth",
                    "type": "string"
                },
                "param_value": {
                    "type": "string"
                }
            }
        },
        "types.PluginConfig": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "description": "ID of the gateway or rule this plugin belongs to",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parallel": {
                    "description": "Whether this plugin can run in parallel",
                    "type": "boolean"
                },
                "priority": {
                    "type": "integer"
                },
                "settings": {
                    "type": "object",
                    "additionalProperties": true
                },
                "stage": {
                    "$ref": "#/definitions/types.Stage"
                }
            }
        },
        "types.Stage": {
            "type": "string",
            "enum": [
                "pre_request",
                "post_request",
                "pre_response",
                "post_response"
            ],
            "x-enum-varnames": [
                "PreRequest",
                "PostRequest",
                "PreResponse",
                "PostResponse"
            ]
        },
        "types.TrustLensConfig": {
            "type": "object",
            "properties": {
                "app_id": {
                    "type": "string"
                },
                "mapping": {
                    "$ref": "#/definitions/types.TrustLensMapping"
                },
                "team_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "types.TrustLensMapping": {
            "type": "object",
            "properties": {
                "input": {
                    "$ref": "#/definitions/types.TrustLensMappingData"
                },
                "output": {
                    "$ref": "#/definitions/types.TrustLensMappingData"
                }
            }
        },
        "types.TrustLensMappingData": {
            "type": "object",
            "properties": {
                "data_projection": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "extract_fields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "upstream.AuthType": {
            "type": "string",
            "enum": [
                "oauth2"
            ],
            "x-enum-varnames": [
                "AuthTypeOAuth2"
            ]
        },
        "upstream.EmbeddingConfig": {
            "type": "object",
            "properties": {
                "credentials": {
                    "$ref": "#/definitions/domain.CredentialsJSON"
                },
                "model": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                }
            }
        },
        "upstream.HealthCheck": {
            "type": "object",
            "properties": {
                "headers": {
                    "$ref": "#/definitions/domain.HeadersJSON"
                },
                "interval": {
                    "description": "Time in seconds before resetting failure count",
                    "type": "integer"
                },
                "passive": {
                    "type": "boolean"
                },
                "path": {
                    "type": "string"
                },
                "threshold": {
                    "description": "Number of failures before marking as unhealthy",
                    "type": "integer"
                }
            }
        },
        "upstream.Proxy": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                }
            }
        },
        "upstream.Target": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/upstream.TargetAuth"
                },
                "credentials": {
                    "$ref": "#/definitions/domain.CredentialsJSON"
                },
                "default_model": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "headers": {
                    "$ref": "#/definitions/domain.HeadersJSON"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "insecure_ssl": {
                    "type": "boolean"
                },
                "models": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "provider_options": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "stream": {
                    "type": "boolean"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "upstream.TargetAuth": {
            "type": "object",
            "properties": {
                "oauth": {
                    "$ref": "#/definitions/upstream.TargetOAuthConfig"
                },
                "type": {
                    "$ref": "#/definitions/upstream.AuthType"
                }
            }
        },
        "upstream.TargetOAuthConfig": {
            "type": "object",
            "properties": {
                "audience": {
                    "type": "string"
                },
                "client_id": {
                    "type": "string"
                },
                "client_secret": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "code_verifier": {
                    "type": "string"
                },
                "extra": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "grant_type": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "redirect_uri": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "token_url": {
                    "type": "string"
                },
                "use_basic_auth": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "upstream.Upstream": {
            "type": "object",
            "properties": {
                "algorithm": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "embedding_config": {
                    "$ref": "#/definitions/upstream.EmbeddingConfig"
                },
                "gateway_id": {
                    "type": "string"
                },
                "health_checks": {
                    "$ref": "#/definitions/upstream.HealthCheck"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "proxy": {
                    "$ref": "#/definitions/upstream.Proxy"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/upstream.Target"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "websocket_config": {
                    "$ref": "#/definitions/upstream.WebsocketConfig"
                }
            }
        },
        "upstream.WebsocketConfig": {
            "type": "object",
            "properties": {
                "enable_direct_communication": {
                    "type": "boolean"
                },
                "handshake_timeout": {
                    "type": "string"
                },
                "ping_period": {
                    "type": "string"
                },
                "pong_wait": {
                    "type": "string"
                },
                "read_buffer_size": {
                    "type": "integer"
                },
                "return_error_details": {
                    "type": "boolean"
                },
                "write_buffer_size": {
                    "type": "integer"
                }
            }
        }
    }
}