definitions:
  apikey.APIKey:
    properties:
      active:
        type: boolean
      created_at:
        type: string
      expires_at:
        type: string
      id:
        type: string
      key:
        type: string
      name:
        type: string
      policies:
        items:
          type: string
        type: array
      subject:
        type: string
      subject_type:
        $ref: '#/definitions/apikey.SubjectType'
    type: object
  apikey.SubjectType:
    enum:
    - engine
    - gateway
    type: string
    x-enum-varnames:
    - EngineType
    - GatewayType
  domain.ClientTLSConfig:
    additionalProperties:
      $ref: '#/definitions/types.ClientTLSConfig'
    type: object
  domain.CredentialsJSON:
    properties:
      api_key:
        description: Api Key
        type: string
      aws_access_key_id:
        description: AWS auth
        type: string
      aws_region:
        type: string
      aws_role:
        type: string
      aws_secret_access_key:
        type: string
      aws_session_token:
        type: string
      aws_use_role:
        type: boolean
      azure_client_id:
        type: string
      azure_client_secret:
        type: string
      azure_endpoint:
        type: string
      azure_eversion:
        type: string
      azure_tenant_id:
        type: string
      azure_use_managed_identity:
        description: Azure auth
        type: boolean
      gcp_service_account_json:
        type: string
      gcp_use_service_account:
        description: GCP auth
        type: boolean
      header_name:
        description: Header-based auth
        type: string
      header_value:
        type: string
      param_location:
        description: '"query" or "body"'
        type: string
      param_name:
        description: Parameter-based auth
        type: string
      param_value:
        type: string
    type: object
  domain.HeadersJSON:
    additionalProperties:
      type: string
    type: object
  domain.SecurityConfigJSON:
    properties:
      allowed_hosts:
        items:
          type: string
        type: array
      allowed_hosts_are_regex:
        type: boolean
      browser_xss_filter:
        type: boolean
      content_security_policy:
        type: string
      content_type_nosniff:
        type: boolean
      custom_frame_options_value:
        type: string
      frame_deny:
        type: boolean
      is_development:
        type: boolean
      referrer_policy:
        type: string
      ssl_host:
        type: string
      ssl_proxy_headers:
        additionalProperties:
          type: string
        type: object
      ssl_redirect:
        type: boolean
      sts_include_subdomains:
        type: boolean
      sts_seconds:
        type: integer
    type: object
  domain.TrustLensJSON:
    properties:
      app_id:
        type: string
      mapping:
        $ref: '#/definitions/types.TrustLensMapping'
      team_id:
        type: string
      type:
        type: string
    type: object
  forwarding_rule.ForwardingRule:
    properties:
      active:
        type: boolean
      createdAt:
        type: string
      gatewayID:
        type: string
      headers:
        $ref: '#/definitions/domain.HeadersJSON'
      id:
        type: string
      methods:
        items:
          type: string
        type: array
      name:
        type: string
      path:
        type: string
      pluginChain:
        items:
          $ref: '#/definitions/types.PluginConfig'
        type: array
      preserveHost:
        type: boolean
      public:
        type: boolean
      retryAttempts:
        type: integer
      serviceID:
        type: string
      stripPath:
        type: boolean
      trustLens:
        $ref: '#/definitions/domain.TrustLensJSON'
      updatedAt:
        type: string
    type: object
  gateway.Gateway:
    properties:
      client_tls:
        $ref: '#/definitions/domain.ClientTLSConfig'
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      required_plugins:
        items:
          $ref: '#/definitions/types.PluginConfig'
        type: array
      security_config:
        $ref: '#/definitions/domain.SecurityConfigJSON'
      session_config:
        $ref: '#/definitions/gateway.SessionConfig'
      status:
        type: string
      telemetry:
        $ref: '#/definitions/telemetry.Telemetry'
      updated_at:
        type: string
    type: object
  gateway.SessionConfig:
    properties:
      body_param_name:
        type: string
      enabled:
        type: boolean
      header_name:
        type: string
      mapping_field:
        type: string
      ttl:
        type: integer
    type: object
  http.updateAPIKeyPoliciesRequest:
    properties:
      policies:
        items:
          type: string
        type: array
    type: object
  request.AddPluginsRequest:
    properties:
      id:
        type: string
      plugins:
        items:
          $ref: '#/definitions/types.PluginConfig'
        type: array
      type:
        type: string
    type: object
  request.AuthType:
    enum:
    - oauth2
    type: string
    x-enum-varnames:
    - AuthTypeOAuth2
  request.ClientTLSCertRequest:
    properties:
      certificate:
        type: string
      private_key:
        type: string
    type: object
  request.ClientTLSConfigRequest:
    properties:
      allow_insecure_connections:
        type: boolean
      ca_cert:
        type: string
      cipher_suites:
        items:
          type: integer
        type: array
      client_certs:
        $ref: '#/definitions/request.ClientTLSCertRequest'
      curve_preferences:
        items:
          type: integer
        type: array
      disable_system_ca_pool:
        type: boolean
      max_version:
        type: string
      min_version:
        type: string
    type: object
  request.CreateAPIKeyRequest:
    properties:
      expires_at:
        type: string
      name:
        type: string
      policies:
        items:
          type: string
        type: array
      subject:
        type: string
      subject_type:
        type: string
    required:
    - name
    type: object
  request.CreateGatewayRequest:
    properties:
      client_tls:
        additionalProperties:
          $ref: '#/definitions/request.ClientTLSConfigRequest'
        type: object
      created_at:
        type: string
      name:
        description: '@required'
        type: string
      required_plugins:
        items:
          $ref: '#/definitions/types.PluginConfig'
        type: array
      security_config:
        $ref: '#/definitions/request.SecurityConfigRequest'
      session_config:
        $ref: '#/definitions/request.SessionConfigRequest'
      status:
        type: string
      telemetry:
        $ref: '#/definitions/request.TelemetryRequest'
      updated_at:
        type: string
    type: object
  request.CreateRuleRequest:
    properties:
      headers:
        additionalProperties:
          type: string
        type: object
      methods:
        items:
          type: string
        type: array
      name:
        type: string
      path:
        type: string
      plugin_chain:
        items:
          $ref: '#/definitions/types.PluginConfig'
        type: array
      preserve_host:
        type: boolean
      retry_attempts:
        type: integer
      service_id:
        type: string
      strip_path:
        type: boolean
      trustlens:
        $ref: '#/definitions/types.TrustLensConfig'
    required:
    - name
    - path
    - service_id
    type: object
  request.DeletePluginsRequest:
    properties:
      id:
        type: string
      plugins:
        items:
          type: string
        type: array
      type:
        type: string
    type: object
  request.EmbeddingRequest:
    properties:
      credentials:
        $ref: '#/definitions/types.Credentials'
      model:
        type: string
      provider:
        type: string
    type: object
  request.ExporterRequest:
    properties:
      name:
        type: string
      settings:
        additionalProperties: true
        type: object
    type: object
  request.HealthCheckRequest:
    properties:
      headers:
        additionalProperties:
          type: string
        type: object
      interval:
        description: Time in seconds before resetting failure count
        type: integer
      passive:
        type: boolean
      path:
        type: string
      threshold:
        description: Number of failures before marking as unhealthy
        type: integer
    type: object
  request.ProxyConfigRequest:
    properties:
      host:
        type: string
      port:
        type: string
      protocol:
        type: string
    type: object
  request.SecurityConfigRequest:
    properties:
      allowed_hosts:
        items:
          type: string
        type: array
      allowed_hosts_are_regex:
        type: boolean
      browser_xss_filter:
        type: boolean
      content_security_policy:
        type: string
      content_type_nosniff:
        type: boolean
      custom_frame_options_value:
        type: string
      frame_deny:
        type: boolean
      is_development:
        type: boolean
      referrer_policy:
        type: string
      ssl_host:
        type: string
      ssl_proxy_headers:
        additionalProperties:
          type: string
        type: object
      ssl_redirect:
        type: boolean
      sts_include_subdomains:
        type: boolean
      sts_seconds:
        type: integer
    type: object
  request.ServiceRequest:
    properties:
      CreatedAt:
        type: string
      UpdatedAt:
        type: string
      credentials:
        $ref: '#/definitions/types.Credentials'
      description:
        type: string
      gateway_id:
        type: string
      headers:
        additionalProperties:
          type: string
        type: object
      host:
        type: string
      id:
        type: string
      name:
        type: string
      path:
        type: string
      port:
        type: integer
      protocol:
        type: string
      retries:
        type: integer
      tags:
        items:
          type: string
        type: array
      type:
        type: string
      upstream_id:
        type: string
    type: object
  request.SessionConfigRequest:
    properties:
      body_param_name:
        type: string
      enabled:
        type: boolean
      header_name:
        type: string
      mapping_field:
        type: string
      ttl:
        type: integer
    type: object
  request.TargetAuthRequest:
    properties:
      oauth:
        $ref: '#/definitions/request.UpstreamOAuthRequest'
      type:
        $ref: '#/definitions/request.AuthType'
    type: object
  request.TargetRequest:
    properties:
      auth:
        $ref: '#/definitions/request.TargetAuthRequest'
      credentials:
        $ref: '#/definitions/types.Credentials'
      default_model:
        type: string
      description:
        type: string
      headers:
        additionalProperties:
          type: string
        type: object
      host:
        type: string
      id:
        type: string
      insecure_ssl:
        type: boolean
      models:
        items:
          type: string
        type: array
      path:
        type: string
      port:
        type: integer
      protocol:
        type: string
      provider:
        type: string
      provider_options:
        additionalProperties: {}
        type: object
      stream:
        type: boolean
      tags:
        items:
          type: string
        type: array
      weight:
        type: integer
    type: object
  request.TelemetryRequest:
    properties:
      enable_plugin_traces:
        type: boolean
      enable_request_traces:
        type: boolean
      exporters:
        items:
          $ref: '#/definitions/request.ExporterRequest'
        type: array
      extra_params:
        additionalProperties:
          type: string
        type: object
      header_mapping:
        additionalProperties:
          type: string
        type: object
    type: object
  request.UpdateGatewayRequest:
    properties:
      client_tls:
        additionalProperties:
          $ref: '#/definitions/request.ClientTLSConfigRequest'
        type: object
      name:
        type: string
      required_plugins:
        items:
          $ref: '#/definitions/types.PluginConfig'
        type: array
      security_config:
        $ref: '#/definitions/request.SecurityConfigRequest'
      session_config:
        $ref: '#/definitions/request.SessionConfigRequest'
      status:
        type: string
      telemetry:
        $ref: '#/definitions/request.TelemetryRequest'
    type: object
  request.UpdatePluginsRequest:
    properties:
      id:
        type: string
      plugins:
        items:
          additionalProperties: {}
          type: object
        type: array
      type:
        type: string
    type: object
  request.UpdateRuleRequest:
    properties:
      active:
        type: boolean
      headers:
        additionalProperties:
          type: string
        type: object
      methods:
        items:
          type: string
        type: array
      name:
        type: string
      path:
        type: string
      plugin_chain:
        items:
          $ref: '#/definitions/types.PluginConfig'
        type: array
      preserve_host:
        type: boolean
      retry_attempts:
        type: integer
      service_id:
        type: string
      strip_path:
        type: boolean
      trustlens:
        $ref: '#/definitions/types.TrustLensConfig'
    type: object
  request.UpstreamAuthRequest:
    properties:
      oauth:
        $ref: '#/definitions/request.UpstreamOAuthRequest'
      type:
        $ref: '#/definitions/request.AuthType'
    type: object
  request.UpstreamOAuthRequest:
    properties:
      audience:
        type: string
      client_id:
        type: string
      client_secret:
        type: string
      code:
        type: string
      code_verifier:
        type: string
      extra:
        additionalProperties:
          type: string
        type: object
      grant_type:
        type: string
      password:
        type: string
      redirect_uri:
        type: string
      refresh_token:
        type: string
      scopes:
        items:
          type: string
        type: array
      token_url:
        type: string
      use_basic_auth:
        type: boolean
      username:
        type: string
    type: object
  request.UpstreamRequest:
    properties:
      algorithm:
        type: string
      auth:
        $ref: '#/definitions/request.UpstreamAuthRequest'
      embedding:
        $ref: '#/definitions/request.EmbeddingRequest'
      gateway_id:
        type: string
      health_checks:
        $ref: '#/definitions/request.HealthCheckRequest'
      id:
        type: string
      name:
        type: string
      proxy_config:
        $ref: '#/definitions/request.ProxyConfigRequest'
      tags:
        items:
          type: string
        type: array
      targets:
        items:
          $ref: '#/definitions/request.TargetRequest'
        type: array
      websocket_config:
        $ref: '#/definitions/request.WebhookConfigRequest'
    type: object
  request.WebhookConfigRequest:
    properties:
      enable_direct_communication:
        type: boolean
      handshake_timeout:
        type: string
      ping_period:
        type: string
      pong_wait:
        type: string
      read_buffer_size:
        type: integer
      return_error_details:
        type: boolean
      write_buffer_size:
        type: integer
    type: object
  response.ForwardingRuleOutput:
    properties:
      active:
        type: boolean
      created_at:
        type: string
      headers:
        $ref: '#/definitions/domain.HeadersJSON'
      id:
        type: string
      methods:
        items:
          type: string
        type: array
      name:
        type: string
      path:
        type: string
      plugin_chain:
        items:
          $ref: '#/definitions/types.PluginConfig'
        type: array
      preserve_host:
        type: boolean
      retry_attempts:
        type: integer
      service_id:
        type: string
      strip_path:
        type: boolean
      trustlens:
        $ref: '#/definitions/domain.TrustLensJSON'
      updated_at:
        type: string
      upstream:
        $ref: '#/definitions/response.UpstreamOutput'
    type: object
  response.GatewayOutput:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      plugin_chain:
        items:
          $ref: '#/definitions/types.PluginConfig'
        type: array
      status:
        type: string
      updated_at:
        type: string
    type: object
  response.ListRulesOutput:
    properties:
      gateway:
        $ref: '#/definitions/response.GatewayOutput'
      rules:
        items:
          $ref: '#/definitions/response.ForwardingRuleOutput'
        type: array
    type: object
  response.UpstreamOutput:
    properties:
      algorithm:
        type: string
      name:
        type: string
      targets:
        items:
          $ref: '#/definitions/upstream.Target'
        type: array
    type: object
  service.Service:
    properties:
      created_at:
        type: string
      credentials:
        $ref: '#/definitions/types.Credentials'
      description:
        type: string
      gateway_id:
        type: string
      headers:
        $ref: '#/definitions/domain.HeadersJSON'
      host:
        description: Direct configuration (used when type is "direct")
        type: string
      id:
        type: string
      name:
        type: string
      path:
        type: string
      port:
        type: integer
      protocol:
        type: string
      stream:
        description: Common settings
        type: boolean
      tags:
        items:
          type: string
        type: array
      type:
        description: '"upstream" or "endpoint"'
        type: string
      updated_at:
        type: string
      upstream:
        $ref: '#/definitions/upstream.Upstream'
      upstream_id:
        description: Upstream configuration (used when type is "upstream")
        type: string
    type: object
  telemetry.ExporterConfig:
    properties:
      name:
        type: string
      settings:
        additionalProperties: true
        type: object
    type: object
  telemetry.Telemetry:
    properties:
      enable_plugin_traces:
        type: boolean
      enable_request_traces:
        type: boolean
      exporters:
        items:
          $ref: '#/definitions/telemetry.ExporterConfig'
        type: array
      extra_params:
        additionalProperties:
          type: string
        type: object
      header_mapping:
        additionalProperties:
          type: string
        type: object
    type: object
  types.ClientTLSCert:
    properties:
      certificate:
        type: string
      private_key:
        type: string
    type: object
  types.ClientTLSConfig:
    properties:
      allow_insecure_connections:
        type: boolean
      ca_certs:
        type: string
      cipher_suites:
        items:
          type: integer
        type: array
      client_certs:
        $ref: '#/definitions/types.ClientTLSCert'
      curve_preferences:
        items:
          type: integer
        type: array
      disable_system_ca_pool:
        type: boolean
      max_version:
        type: string
      min_version:
        type: string
    type: object
  types.Credentials:
    properties:
      api_key:
        description: Api Key
        type: string
      aws_access_key_id:
        description: AWS auth
        type: string
      aws_region:
        type: string
      aws_role:
        type: string
      aws_secret_access_key:
        type: string
      aws_session_token:
        type: string
      aws_use_role:
        type: boolean
      azure_client_id:
        type: string
      azure_client_secret:
        type: string
      azure_endpoint:
        type: string
      azure_eversion:
        type: string
      azure_tenant_id:
        type: string
      azure_use_managed_identity:
        description: Azure auth
        type: boolean
      gcp_service_account_json:
        type: string
      gcp_use_service_account:
        description: GCP auth
        type: boolean
      header_name:
        description: Header-based auth
        type: string
      header_value:
        type: string
      param_location:
        description: '"query" or "body"'
        type: string
      param_name:
        description: Parameter-based auth
        type: string
      param_value:
        type: string
    type: object
  types.PluginConfig:
    properties:
      enabled:
        type: boolean
      id:
        description: ID of the gateway or rule this plugin belongs to
        type: string
      name:
        type: string
      parallel:
        description: Whether this plugin can run in parallel
        type: boolean
      priority:
        type: integer
      settings:
        additionalProperties: true
        type: object
      stage:
        $ref: '#/definitions/types.Stage'
    type: object
  types.Stage:
    enum:
    - pre_request
    - post_request
    - pre_response
    - post_response
    type: string
    x-enum-varnames:
    - PreRequest
    - PostRequest
    - PreResponse
    - PostResponse
  types.TrustLensConfig:
    properties:
      app_id:
        type: string
      mapping:
        $ref: '#/definitions/types.TrustLensMapping'
      team_id:
        type: string
      type:
        type: string
    type: object
  types.TrustLensMapping:
    properties:
      input:
        $ref: '#/definitions/types.TrustLensMappingData'
      output:
        $ref: '#/definitions/types.TrustLensMappingData'
    type: object
  types.TrustLensMappingData:
    properties:
      data_projection:
        additionalProperties:
          type: string
        type: object
      extract_fields:
        additionalProperties:
          type: string
        type: object
    type: object
  upstream.AuthType:
    enum:
    - oauth2
    type: string
    x-enum-varnames:
    - AuthTypeOAuth2
  upstream.EmbeddingConfig:
    properties:
      credentials:
        $ref: '#/definitions/domain.CredentialsJSON'
      model:
        type: string
      provider:
        type: string
    type: object
  upstream.HealthCheck:
    properties:
      headers:
        $ref: '#/definitions/domain.HeadersJSON'
      interval:
        description: Time in seconds before resetting failure count
        type: integer
      passive:
        type: boolean
      path:
        type: string
      threshold:
        description: Number of failures before marking as unhealthy
        type: integer
    type: object
  upstream.Proxy:
    properties:
      host:
        type: string
      port:
        type: string
      protocol:
        type: string
    type: object
  upstream.Target:
    properties:
      auth:
        $ref: '#/definitions/upstream.TargetAuth'
      credentials:
        $ref: '#/definitions/domain.CredentialsJSON'
      default_model:
        type: string
      description:
        type: string
      headers:
        $ref: '#/definitions/domain.HeadersJSON'
      host:
        type: string
      id:
        type: string
      insecure_ssl:
        type: boolean
      models:
        items:
          type: string
        type: array
      path:
        type: string
      port:
        type: integer
      protocol:
        type: string
      provider:
        type: string
      provider_options:
        additionalProperties: {}
        type: object
      stream:
        type: boolean
      tags:
        items:
          type: string
        type: array
      weight:
        type: integer
    type: object
  upstream.TargetAuth:
    properties:
      oauth:
        $ref: '#/definitions/upstream.TargetOAuthConfig'
      type:
        $ref: '#/definitions/upstream.AuthType'
    type: object
  upstream.TargetOAuthConfig:
    properties:
      audience:
        type: string
      client_id:
        type: string
      client_secret:
        type: string
      code:
        type: string
      code_verifier:
        type: string
      extra:
        additionalProperties:
          type: string
        type: object
      grant_type:
        type: string
      password:
        type: string
      redirect_uri:
        type: string
      refresh_token:
        type: string
      scopes:
        items:
          type: string
        type: array
      token_url:
        type: string
      use_basic_auth:
        type: boolean
      username:
        type: string
    type: object
  upstream.Upstream:
    properties:
      algorithm:
        type: string
      created_at:
        type: string
      embedding_config:
        $ref: '#/definitions/upstream.EmbeddingConfig'
      gateway_id:
        type: string
      health_checks:
        $ref: '#/definitions/upstream.HealthCheck'
      id:
        type: string
      name:
        type: string
      proxy:
        $ref: '#/definitions/upstream.Proxy'
      tags:
        items:
          type: string
        type: array
      targets:
        items:
          $ref: '#/definitions/upstream.Target'
        type: array
      updated_at:
        type: string
      websocket_config:
        $ref: '#/definitions/upstream.WebsocketConfig'
    type: object
  upstream.WebsocketConfig:
    properties:
      enable_direct_communication:
        type: boolean
      handshake_timeout:
        type: string
      ping_period:
        type: string
      pong_wait:
        type: string
      read_buffer_size:
        type: integer
      return_error_details:
        type: boolean
      write_buffer_size:
        type: integer
    type: object
info:
  contact:
    email: support@neuraltrust.ai
    name: NeuralTrust
    url: https://neuraltrust.ai/contact
  title: TrustGate
  version: v1.6.10
paths:
  /api/v1/gateways:
    get:
      description: Retrieves a list of all gateways in the system
      parameters:
      - description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of gateways
          schema:
            items:
              $ref: '#/definitions/gateway.Gateway'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      tags:
      - Gateways
    post:
      consumes:
      - application/json
      description: Creates a new gateway in the system
      parameters:
      - description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway data
        in: body
        name: gateway
        required: true
        schema:
          $ref: '#/definitions/request.CreateGatewayRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Gateway created successfully
          schema:
            $ref: '#/definitions/gateway.Gateway'
        "400":
          description: Invalid request data
          schema:
            additionalProperties: true
            type: object
      tags:
      - Gateways
  /api/v1/gateways/{gateway_id}:
    delete:
      description: Removes a gateway from the system
      parameters:
      - description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway ID
        in: path
        name: gateway_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Gateway not found
          schema:
            additionalProperties: true
            type: object
      tags:
      - Gateways
    get:
      description: Returns details of a specific gateway
      parameters:
      - description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway ID
        in: path
        name: gateway_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Gateway
          schema:
            $ref: '#/definitions/gateway.Gateway'
        "404":
          description: Gateway not found
          schema:
            additionalProperties: true
            type: object
      tags:
      - Gateways
    put:
      consumes:
      - application/json
      description: Updates an existing gateway
      parameters:
      - description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway ID
        in: path
        name: gateway_id
        required: true
        type: string
      - description: Updated gateway data
        in: body
        name: gateway
        required: true
        schema:
          $ref: '#/definitions/request.UpdateGatewayRequest'
      produces:
      - application/json
      responses:
        "204":
          description: Gateway updated successfully
        "400":
          description: Invalid request data
          schema:
            additionalProperties: true
            type: object
      tags:
      - Gateways
  /api/v1/gateways/{gateway_id}/rules:
    get:
      description: Returns a list of all rules for a gateway
      parameters:
      - description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway ID
        in: path
        name: gateway_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of rules
          schema:
            $ref: '#/definitions/response.ListRulesOutput'
        "404":
          description: Gateway not found
          schema:
            additionalProperties: true
            type: object
      tags:
      - Rules
    post:
      consumes:
      - application/json
      description: Adds a new rule under a gateway
      parameters:
      - description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway ID
        in: path
        name: gateway_id
        required: true
        type: string
      - description: Rule request body
        in: body
        name: rule
        required: true
        schema:
          $ref: '#/definitions/request.CreateRuleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Rule created successfully
          schema:
            $ref: '#/definitions/forwarding_rule.ForwardingRule'
        "400":
          description: Invalid request data
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      tags:
      - Rules
  /api/v1/gateways/{gateway_id}/rules/{rule_id}:
    delete:
      description: Removes a rule from a gateway
      parameters:
      - description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway ID
        in: path
        name: gateway_id
        required: true
        type: string
      - description: Rule ID
        in: path
        name: rule_id
        required: true
        type: string
      responses:
        "204":
          description: Rule deleted successfully
        "404":
          description: Rule not found
          schema:
            additionalProperties: true
            type: object
      tags:
      - Rules
    put:
      consumes:
      - application/json
      description: Updates an existing rule
      parameters:
      - description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway ID
        in: path
        name: gateway_id
        required: true
        type: string
      - description: Rule ID
        in: path
        name: rule_id
        required: true
        type: string
      - description: Updated rule data
        in: body
        name: rule
        required: true
        schema:
          $ref: '#/definitions/request.UpdateRuleRequest'
      produces:
      - application/json
      responses:
        "204":
          description: Rule updated successfully
        "400":
          description: Invalid request data
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Rule not found
          schema:
            additionalProperties: true
            type: object
      tags:
      - Rules
  /api/v1/gateways/{gateway_id}/services:
    get:
      description: Returns a list of all services for a gateway
      parameters:
      - description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway ID
        in: path
        name: gateway_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of services
          schema:
            items:
              $ref: '#/definitions/service.Service'
            type: array
        "404":
          description: Gateway not found
          schema:
            additionalProperties: true
            type: object
      tags:
      - Services
    post:
      consumes:
      - application/json
      description: Adds a new service under a gateway
      parameters:
      - description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway ID
        in: path
        name: gateway_id
        required: true
        type: string
      - description: Service request body
        in: body
        name: service
        required: true
        schema:
          $ref: '#/definitions/request.ServiceRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Service created successfully
          schema:
            $ref: '#/definitions/service.Service'
        "400":
          description: Invalid request data
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      tags:
      - Services
  /api/v1/gateways/{gateway_id}/services/{service_id}:
    delete:
      description: Removes a service from a gateway
      parameters:
      - description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway ID
        in: path
        name: gateway_id
        required: true
        type: string
      - description: Service ID
        in: path
        name: service_id
        required: true
        type: string
      responses:
        "204":
          description: Service deleted successfully
        "404":
          description: Service not found
          schema:
            additionalProperties: true
            type: object
      tags:
      - Services
    get:
      description: Returns details of a specific service
      parameters:
      - description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway ID
        in: path
        name: gateway_id
        required: true
        type: string
      - description: Service ID
        in: path
        name: service_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Service details
          schema:
            $ref: '#/definitions/service.Service'
        "404":
          description: Service not found
          schema:
            additionalProperties: true
            type: object
      tags:
      - Services
    put:
      consumes:
      - application/json
      description: Updates an existing service
      parameters:
      - description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway ID
        in: path
        name: gateway_id
        required: true
        type: string
      - description: Service ID
        in: path
        name: service_id
        required: true
        type: string
      - description: Updated service data
        in: body
        name: service
        required: true
        schema:
          $ref: '#/definitions/request.ServiceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Service updated successfully
          schema:
            $ref: '#/definitions/service.Service'
        "400":
          description: Invalid request data
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Service not found
          schema:
            additionalProperties: true
            type: object
      tags:
      - Services
  /api/v1/gateways/{gateway_id}/upstreams:
    get:
      description: Returns a list of all upstreams for a gateway
      parameters:
      - description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway ID
        in: path
        name: gateway_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of upstreams
          schema:
            items:
              $ref: '#/definitions/upstream.Upstream'
            type: array
      tags:
      - Upstreams
    post:
      consumes:
      - application/json
      description: Adds a new upstream under a gateway
      parameters:
      - description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway ID
        in: path
        name: gateway_id
        required: true
        type: string
      - description: Upstream data
        in: body
        name: upstream
        required: true
        schema:
          $ref: '#/definitions/request.UpstreamRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Upstream created successfully
          schema:
            $ref: '#/definitions/upstream.Upstream'
      tags:
      - Upstreams
  /api/v1/gateways/{gateway_id}/upstreams/{upstream_id}:
    delete:
      description: Removes an upstream from a gateway
      parameters:
      - description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway ID
        in: path
        name: gateway_id
        required: true
        type: string
      - description: Upstream ID
        in: path
        name: upstream_id
        required: true
        type: string
      responses:
        "204":
          description: Upstream deleted successfully
      tags:
      - Upstreams
    get:
      description: Returns details of a specific upstream
      parameters:
      - description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway ID
        in: path
        name: gateway_id
        required: true
        type: string
      - description: Upstream ID
        in: path
        name: upstream_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Upstream details
          schema:
            $ref: '#/definitions/upstream.Upstream'
      tags:
      - Upstreams
    put:
      consumes:
      - application/json
      description: Updates an existing upstream
      parameters:
      - description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway ID
        in: path
        name: gateway_id
        required: true
        type: string
      - description: Upstream ID
        in: path
        name: upstream_id
        required: true
        type: string
      - description: Updated upstream data
        in: body
        name: upstream
        required: true
        schema:
          $ref: '#/definitions/request.UpstreamRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Upstream updated successfully
          schema:
            $ref: '#/definitions/upstream.Upstream'
      tags:
      - Upstreams
  /api/v1/iam/api-key:
    post:
      consumes:
      - application/json
      description: Generates a new API key for the specified gateway
      parameters:
      - description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway ID
        in: path
        name: gateway_id
        required: true
        type: string
      - description: API Key request body
        in: body
        name: api_key
        required: true
        schema:
          $ref: '#/definitions/request.CreateAPIKeyRequest'
      produces:
      - application/json
      responses:
        "201":
          description: API Key created successfully
          schema:
            $ref: '#/definitions/apikey.APIKey'
        "400":
          description: Invalid request data
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      tags:
      - API Keys
  /api/v1/iam/api-key/{key_id}:
    delete:
      description: Removes an API key. If the key is scoped to a gateway (GatewayType),
        provide ?subject_id=<gateway_uuid>.
      parameters:
      - description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: API Key ID
        in: path
        name: key_id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete an API Key
      tags:
      - API Keys
  /api/v1/iam/api-key/{key_id}/policies:
    put:
      consumes:
      - application/json
      description: Updates the set of allowed rule IDs (policies) for an API key
      parameters:
      - description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway ID
        in: path
        name: gateway_id
        required: true
        type: string
      - description: API Key ID
        in: path
        name: key_id
        required: true
        type: string
      - description: Policies update payload
        in: body
        name: update
        required: true
        schema:
          $ref: '#/definitions/http.updateAPIKeyPoliciesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: API Key updated successfully
          schema:
            $ref: '#/definitions/apikey.APIKey'
        "400":
          description: Invalid request data
          schema:
            additionalProperties: true
            type: object
        "404":
          description: API key not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      tags:
      - API Keys
  /api/v1/iam/api-key/public:
    get:
      description: Returns a list of all API keys for a gateway with obfuscated key
        values
      parameters:
      - description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway ID
        in: path
        name: gateway_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of API Keys with obfuscated keys
          schema:
            items:
              $ref: '#/definitions/apikey.APIKey'
            type: array
        "404":
          description: Gateway not found
          schema:
            additionalProperties: true
            type: object
      tags:
      - API Keys
  /api/v1/plugins:
    delete:
      consumes:
      - application/json
      description: Deletes the specified plugins from a gateway's required plugins
        or a rule's plugin chain
      parameters:
      - description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Delete plugins payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/request.DeletePluginsRequest'
      produces:
      - application/json
      responses:
        "204":
          description: Plugins deleted successfully
        "400":
          description: Invalid request data
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Entity not found
          schema:
            additionalProperties: true
            type: object
      tags:
      - Plugins
    post:
      consumes:
      - application/json
      description: Adds plugins to a gateway's required plugins or a rule's plugin
        chain.
      parameters:
      - description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Add plugins payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/request.AddPluginsRequest'
      produces:
      - application/json
      responses:
        "204":
          description: Plugins added successfully
        "400":
          description: Invalid request data or duplicate plugin for stage
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Entity not found
          schema:
            additionalProperties: true
            type: object
      tags:
      - Plugins
    put:
      consumes:
      - application/json
      description: Replaces plugins matched by ID within the chain, preserving the
        original id and name.
      parameters:
      - description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Update plugins payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/request.UpdatePluginsRequest'
      produces:
      - application/json
      responses:
        "204":
          description: Plugins updated successfully
        "400":
          description: Invalid request data
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Entity or plugin not found
          schema:
            additionalProperties: true
            type: object
      tags:
      - Plugins
  /api/v1/version:
    get:
      consumes:
      - application/json
      description: Returns the current version of the AI-Gateway
      produces:
      - application/json
      responses:
        "200":
          description: Version information
          schema:
            additionalProperties: true
            type: object
      tags:
      - Version
swagger: "2.0"
